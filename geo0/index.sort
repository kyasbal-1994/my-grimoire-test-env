@Pass{
  FS_PREC(mediump,float)

  varying vec3 vColor;

  varying vec2 uv;
  #ifdef VS
    attribute vec3 position;
    @COLOR1
    attribute vec3 color1;

    @COLOR2
    attribute vec3 color2;

    @POSITION_BASE
    attribute vec3 posBase;

    @RANDOM_SEED
    attribute float seed;

    uniform float _time;

    uniform mat4 _matPVM;
    vec3 hsv2rgb(vec3 c)
    {
    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);
    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);
    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);
}

    void main(){
      uv = position.xy /2.0 + vec2(0.5);
      vColor = hsv2rgb(vec3(cos(_time/1000. + seed * seed),1,1));//*mix(color1,color2,0.5 + sin(_time /1000. + seed) * 0.5);
      gl_Position = _matPVM * vec4(position + posBase + vec3(0,sin(_time/1000. + seed),cos(_time/1000. + seed)),1);
    }
  #endif

  #ifdef FS
  @{default:"images.jpeg",flag:"TEXTURE_USED"}
  uniform sampler2D texture;
    void main(){
      vec4 baseColor = vec4(1.0);
      #ifdef TEXTURE_USED
      baseColor *= texture2D(texture,uv);
      #endif
      if(length(baseColor)/1.73<0.3){
        discard;
      }else{
        gl_FragColor = vec4(vColor* baseColor.rgb,1.);
      }
    }
  #endif
}
